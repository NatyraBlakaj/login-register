[{"C:\\Users\\Natyra\\Desktop\\register\\src\\index.js":"1","C:\\Users\\Natyra\\Desktop\\register\\src\\App.js":"2","C:\\Users\\Natyra\\Desktop\\register\\src\\reportWebVitals.js":"3","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\home\\Home.js":"4","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\register\\Register.js":"5","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\dashboard\\Dashboard.js":"6","C:\\Users\\Natyra\\Desktop\\register\\src\\firebase.js":"7","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\Context.js":"8","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\money\\Addmoney.js":"9","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\outlay\\Outlay.js":"10","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\privateRoute.js":"11","C:\\Users\\Natyra\\Desktop\\register\\src\\services\\auth.js":"12","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\edit\\EditOutlays.js":"13","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\LoginPrivateRoute.js":"14"},{"size":547,"mtime":1607610247154,"results":"15","hashOfConfig":"16"},{"size":1413,"mtime":1610810037778,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":4393,"mtime":1610812425321,"results":"19","hashOfConfig":"16"},{"size":4310,"mtime":1610812180456,"results":"20","hashOfConfig":"16"},{"size":4294,"mtime":1610812519370,"results":"21","hashOfConfig":"16"},{"size":500,"mtime":1608503812630,"results":"22","hashOfConfig":"16"},{"size":1320,"mtime":1610496506371,"results":"23","hashOfConfig":"16"},{"size":4269,"mtime":1610496506375,"results":"24","hashOfConfig":"16"},{"size":4604,"mtime":1610572383746,"results":"25","hashOfConfig":"16"},{"size":583,"mtime":1610809923111,"results":"26","hashOfConfig":"16"},{"size":1023,"mtime":1610812215011,"results":"27","hashOfConfig":"16"},{"size":5335,"mtime":1610497175380,"results":"28","hashOfConfig":"16"},{"size":582,"mtime":1610810012116,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"nbzldt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Natyra\\Desktop\\register\\src\\index.js",[],["63","64"],"C:\\Users\\Natyra\\Desktop\\register\\src\\App.js",["65"],"C:\\Users\\Natyra\\Desktop\\register\\src\\reportWebVitals.js",[],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\home\\Home.js",["66"],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\register\\Register.js",["67","68"],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\dashboard\\Dashboard.js",["69","70","71"],"C:\\Users\\Natyra\\Desktop\\register\\src\\firebase.js",["72"],"import firebase from 'firebase/app';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDbvkwNar5pCmBsUNVTYIe9f4FeAetaoAs\",\r\n    authDomain: \"money-outlay.firebaseapp.com\",\r\n    projectId: \"money-outlay\",\r\n    storageBucket: \"money-outlay.appspot.com\",\r\n    messagingSenderId: \"854369756550\",\r\n    appId: \"1:854369756550:web:af9af2d025055b867af807\",\r\n    measurementId: \"G-ESEFB21B83\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\Context.js",[],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\money\\Addmoney.js",["73"],"import React, {Component} from 'react';\r\nimport firebase from \"../../firebase\";\r\nimport {Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Consumer} from '../Context'\r\nimport './Addmoney.css';\r\n\r\nclass Addmoney extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    return <Formik\r\n                        initialValues={{activeMoney: ''}}\r\n\r\n                        onSubmit={formValues => {\r\n                            const vleraAktiveMonedhave = value.money.activeMoney;\r\n                            let shumaReEMonedhave = formValues.activeMoney;\r\n                            const shumaTotale = parseInt(vleraAktiveMonedhave) + parseInt(shumaReEMonedhave);\r\n                            const updateRef = firebase.firestore().collection('money').doc('o6gaS9eLygWxAZAJG05ZO');\r\n                            updateRef.set({\r\n                                activeMoney: shumaTotale\r\n                            });\r\n                            this.props.history.push('/Dashboard');\r\n                        }}\r\n\r\n                        validationSchema={Yup.object().shape({\r\n\r\n                            activeMoney: Yup.string()\r\n                                .required('Required')\r\n                                .min(0,'Number must be positive')\r\n                        })}>\r\n                        {props => {\r\n                            const {\r\n                                values,\r\n                                touched,\r\n                                errors,\r\n                                isSubmitting,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                handleSubmit\r\n                            } = props;\r\n                            return (\r\n                                <div id=\"money-document\">\r\n                                    <div\r\n                                        className=\"moneyform border p-0 col-lg-4 col-md-7 col-sm-10 col-xs-10 ml-auto mr-auto\">\r\n                                        <div className=\"card-header h3 addmoney-element\">Add money</div>\r\n                                        <div className=\"card-body\">\r\n                                            <form onSubmit={handleSubmit}>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        min=\"0\"\r\n                                                        name=\"activeMoney\"\r\n                                                        placeholder=\"Enter Money...\"\r\n                                                        value={values.activeMoney}\r\n                                                        onBlur={handleBlur}\r\n                                                        className=' form-control {errors.activeMoney && touched.activeMoney && \"erros\"}'\r\n                                                        onChange={handleChange}/>\r\n                                                </div>\r\n                                                {errors.activeMoney && touched.activeMoney && (\r\n                                                    <div className=\"input-feedback\">{errors.activeMoney}</div>\r\n                                                )}\r\n\r\n                                                <input\r\n                                                    type=\"submit\"\r\n                                                    value=\"Add money\"\r\n                                                    className=\"btn moneybtn btn-block\"\r\n                                                    disabled={isSubmitting}\r\n                                                />\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        }\r\n                    </Formik>\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Addmoney;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\outlay\\Outlay.js",["74","75"],"import React, {Component} from 'react';\r\nimport firebase from \"../../firebase\";\r\nimport {Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as EmailValidator from 'email-validator';\r\nimport './Outlay.css';\r\n\r\n\r\n\r\nclass Outlay extends Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{name: '', price: ''}}\r\n                onSubmit={values => {\r\n\r\n                    firebase.firestore().collection(\"outlays\").add({\r\n                        name: values.name,\r\n                        price: parseInt(values.price),\r\n\r\n\r\n                    })\r\n                    this.props.history.push('/Dashboard');\r\n                }}\r\n\r\n\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string()\r\n                        .required('Required')\r\n                        .min(3, 'Too Short!'),\r\n                    price: Yup.string()\r\n                        .required('Required')\r\n\r\n\r\n                })}\r\n            >\r\n                {\r\n                    props => {\r\n                        const {\r\n                            values,\r\n                            touched,\r\n                            errors,\r\n                            isSubmitting,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit\r\n                        } = props;\r\n                        return (\r\n                            <div id=\"outlay-document\">\r\n                                <div className=\"outlayform border p-0 col-lg-4 col-md-7 col-sm-10 col-xs-12 ml-auto mr-auto\">\r\n                                    <div className=\"card-header h3 add-element\">Add shpenzimet</div>\r\n                                    <div className=\"card-body\">\r\n                                        <form onSubmit={handleSubmit}>\r\n\r\n                                            <div className=\"form-group form-group-lg\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Enter Name...\"\r\n                                                    value={values.name}\r\n                                                    onBlur={handleBlur}\r\n                                                    className=' form-control {errors.name && touched.name && \"erros\"}'\r\n                                                    onChange={handleChange}/>\r\n                                            </div>\r\n                                            {errors.name && touched.name && (\r\n                                                <div className=\"input-feedback\">{errors.name}</div>\r\n                                            )}\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    min=\"0\"\r\n                                                    name=\"price\"\r\n                                                    placeholder=\"Enter Price...\"\r\n                                                    value={values.price}\r\n                                                    onBlur={handleBlur}\r\n                                                    className='form-control {errors.price && touched.price && \"erros\"}'\r\n                                                    onChange={handleChange}/>\r\n\r\n                                            </div>\r\n                                            {errors.price && touched.price && (\r\n                                                <div className=\"input-feedback\">{errors.price}</div>\r\n                                            )}\r\n\r\n                                            <input\r\n                                                type=\"submit\"\r\n                                                value=\"Add shpenzimet\"\r\n                                                className=\"btn addbtn btn-block\"\r\n                                                disabled={isSubmitting}\r\n                                            />\r\n                                        </form>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Outlay;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\privateRoute.js",["76","77"],"C:\\Users\\Natyra\\Desktop\\register\\src\\services\\auth.js",[],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\edit\\EditOutlays.js",["78","79"],"import React, {Component} from 'react';\r\nimport {Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Consumer} from \"../Context\";\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\nclass EditOutlays extends Component {\r\n\r\n    render() {\r\n\r\n        let urlValue = this.props.match.params.id;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    return <Formik\r\n                        initialValues={{\r\n                            name: `${localStorage.getItem('editElementName')}`,\r\n                            price: `${localStorage.getItem('editElementPrice')}`\r\n                        }}\r\n                        onSubmit={values => {\r\n                            const updateRef = firebase.firestore().collection('outlays').doc('MZWcSdsKtjMILNdk2xOF');\r\n                            updateRef.set({\r\n                                name: values.name,\r\n                                price: parseInt(values.price)\r\n                            });\r\n                            this.props.history.push('/Dashboard');\r\n                        }}\r\n\r\n\r\n                        validationSchema={Yup.object().shape({\r\n                            name: Yup.string()\r\n                                .required('Required')\r\n                                .min(3, 'Too Short!'),\r\n                            price: Yup.string()\r\n                                .required('Required')\r\n\r\n\r\n                        })}\r\n                    >\r\n                        {\r\n                            props => {\r\n                                const {\r\n                                    values,\r\n                                    touched,\r\n                                    errors,\r\n                                    isSubmitting,\r\n                                    handleChange,\r\n                                    handleBlur,\r\n                                    handleSubmit\r\n                                } = props;\r\n                                return (\r\n                                    <div id=\"outlay-document\">\r\n\r\n                                        <div\r\n                                            className=\"outlayform border p-0 col-lg-4 col-md-7 col-sm-10 col-xs-12 ml-auto mr-auto\">\r\n                                            <div className=\"card-header h3 add-element\">Edit Outlays</div>\r\n                                            <div className=\"card-body\">\r\n                                                <form onSubmit={handleSubmit}>\r\n\r\n                                                    <div className=\"form-group form-group-lg\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"name\"\r\n                                                            value={values.name}\r\n                                                            onBlur={handleBlur}\r\n                                                            className=' form-control {errors.name && touched.name && \"erros\"}'\r\n                                                            onChange={handleChange}/>\r\n                                                    </div>\r\n                                                    {errors.name && touched.name && (\r\n                                                        <div className=\"input-feedback\">{errors.name}</div>\r\n                                                    )}\r\n\r\n                                                    <div className=\"form-group\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            name=\"price\"\r\n                                                            value={values.price}\r\n                                                            onBlur={handleBlur}\r\n                                                            className='form-control {errors.price && touched.price && \"erros\"}'\r\n                                                            onChange={handleChange}/>\r\n\r\n                                                    </div>\r\n                                                    {errors.price && touched.price && (\r\n                                                        <div className=\"input-feedback\">{errors.price}</div>\r\n                                                    )}\r\n\r\n                                                    <input\r\n                                                        type=\"submit\"\r\n                                                        value=\"Edit\"\r\n                                                        className=\"btn addbtn btn-block\"\r\n                                                        disabled={isSubmitting}\r\n                                                    />\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }}\r\n                    </Formik>\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditOutlays;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\LoginPrivateRoute.js",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":6,"column":34,"nodeType":"88","messageId":"89","endLine":6,"endColumn":39},{"ruleId":"86","severity":1,"message":"90","line":32,"column":25,"nodeType":"88","messageId":"89","endLine":32,"endColumn":37},{"ruleId":"86","severity":1,"message":"91","line":3,"column":13,"nodeType":"88","messageId":"89","endLine":3,"endColumn":27},{"ruleId":"86","severity":1,"message":"90","line":34,"column":25,"nodeType":"88","messageId":"89","endLine":34,"endColumn":37},{"ruleId":"86","severity":1,"message":"92","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":24,"column":33,"nodeType":"95","endLine":24,"endColumn":81},{"ruleId":"93","severity":1,"message":"96","line":25,"column":33,"nodeType":"95","endLine":28,"endColumn":39},{"ruleId":"86","severity":1,"message":"97","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"86","severity":1,"message":"98","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":13},{"ruleId":"86","severity":1,"message":"98","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":13},{"ruleId":"86","severity":1,"message":"91","line":5,"column":13,"nodeType":"88","messageId":"89","endLine":5,"endColumn":27},{"ruleId":"86","severity":1,"message":"99","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"100","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":17},{"ruleId":"86","severity":1,"message":"98","line":2,"column":9,"nodeType":"88","messageId":"89","endLine":2,"endColumn":13},{"ruleId":"86","severity":1,"message":"101","line":12,"column":13,"nodeType":"88","messageId":"89","endLine":12,"endColumn":21},{"ruleId":"86","severity":1,"message":"99","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"100","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":17},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'isSubmitting' is assigned a value but never used.","'EmailValidator' is defined but never used.","'EditOutlays' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'firestore' is defined but never used.","'Form' is defined but never used.","'useContext' is defined but never used.","'Consumer' is defined but never used.","'urlValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]