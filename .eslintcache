[{"C:\\Users\\Natyra\\Desktop\\register\\src\\index.js":"1","C:\\Users\\Natyra\\Desktop\\register\\src\\App.js":"2","C:\\Users\\Natyra\\Desktop\\register\\src\\reportWebVitals.js":"3","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\home\\Home.js":"4","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\register\\Register.js":"5","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\dashboard\\Dashboard.js":"6","C:\\Users\\Natyra\\Desktop\\register\\src\\firebase.js":"7","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\Context.js":"8","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\money\\Addmoney.js":"9","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\outlay\\Outlay.js":"10","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\privateRoute.js":"11","C:\\Users\\Natyra\\Desktop\\register\\src\\services\\auth.js":"12"},{"size":547,"mtime":1607610247154,"results":"13","hashOfConfig":"14"},{"size":1111,"mtime":1609972378759,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":4739,"mtime":1610311771454,"results":"17","hashOfConfig":"14"},{"size":5354,"mtime":1609877243978,"results":"18","hashOfConfig":"14"},{"size":3666,"mtime":1610061921847,"results":"19","hashOfConfig":"14"},{"size":500,"mtime":1608503812630,"results":"20","hashOfConfig":"14"},{"size":1213,"mtime":1609971157676,"results":"21","hashOfConfig":"14"},{"size":4094,"mtime":1609879036641,"results":"22","hashOfConfig":"14"},{"size":4541,"mtime":1609879001046,"results":"23","hashOfConfig":"14"},{"size":583,"mtime":1609972075825,"results":"24","hashOfConfig":"14"},{"size":313,"mtime":1610306755754,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"nbzldt",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Natyra\\Desktop\\register\\src\\index.js",[],["57","58"],"C:\\Users\\Natyra\\Desktop\\register\\src\\App.js",[],"C:\\Users\\Natyra\\Desktop\\register\\src\\reportWebVitals.js",[],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\home\\Home.js",[],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\register\\Register.js",["59"],"import React, {Component} from 'react';\r\nimport {Formik} from 'formik';\r\nimport * as EmailValidator from 'email-validator';\r\nimport * as Yup from 'yup';\r\nimport './Register.css';\r\n\r\n\r\nclass Register extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Formik initialValues={{name: '', email: '', password: ''}}\r\n                    onSubmit={(values, {setSubmitting}) => {\r\n                    }}\r\n\r\n                    validationSchema={Yup.object().shape({\r\n                        name: Yup.string()\r\n                            .required('Required')\r\n                            .min(2, 'Name is too short'),\r\n                        email: Yup.string()\r\n                            .email()\r\n                            .required('Required'),\r\n                        password: Yup.string()\r\n                            .required('Required')\r\n                            .min(8, 'Password is too short should be 8 character minimum')\r\n                            .matches(/(?=.*[0-9])/, 'Password must contain number')\r\n\r\n                    })}>\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit\r\n                    } = props;\r\n                    return (\r\n                        <div className=\"home-document-register\">\r\n                            <div className=\"formregister border p-0 col-lg-4 col-md-7 col-sm-10 col-xs-12 ml-auto mr-auto\">\r\n                                <div className=\"card-header h3 mb-3 register-element\">Register</div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={handleSubmit} className=\"forma2\">\r\n                                        <div className=\"form-group\">\r\n\r\n                                            <input\r\n                                                name=\"name\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter your name\"\r\n                                                value={values.name}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className='form-control {errors.name && touched.name && \"erros\"}'\r\n                                            />\r\n                                        </div>\r\n                                        {errors.name && touched.name && (\r\n                                            <div className=\"input-feedback\">{errors.name}</div>\r\n                                        )}\r\n\r\n                                        <div className=\"form-group\">\r\n\r\n                                            <input\r\n                                                name=\"email\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter your email\"\r\n                                                value={values.email}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className='form-control {errors.email && touched.email && \"erros\"}'\r\n                                            />\r\n                                        </div>\r\n                                        {errors.email && touched.email && (\r\n                                            <div className=\"input-feedback\">{errors.email}</div>\r\n                                        )}\r\n\r\n                                        <div className=\"form-group\">\r\n\r\n                                            <input\r\n                                                name=\"password\"\r\n                                                type=\"password\"\r\n                                                placeholder=\"Enter your password\"\r\n                                                value={values.password}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className='form-control {errors.password && touched.password && \"erros\"}'\r\n                                            />\r\n                                        </div>\r\n                                        {errors.password && touched.password && (\r\n                                            <div className=\"input-feedback\">{errors.password}</div>\r\n                                        )}\r\n\r\n                                        <button className=\"btn  btn-block registerbtn \" type=\"submit\"\r\n                                                disabled={isSubmitting}>Register\r\n                                        </button>\r\n\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                }\r\n\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\dashboard\\Dashboard.js",["60","61"],"import React, {Component} from 'react';\nimport './Dashboard.css';\nimport {Link} from 'react-router-dom';\nimport {Consumer} from \"../Context\";\nimport firebase from \"../../firebase\";\n\nclass Dashboard extends Component {\n    deleteOutlay = () => {\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    return (\n                        <div id=\"dashboard-document\">\n                            <nav\n                                className=\"navbar navbar-expand-lg navbar-light navheader d-flex justify-content-between\">\n                                <a className=\"navbar-brand text-white\" href=\"#\">Login</a>\n                                <a className=\"navbar-brand text-white\" href=\"#\" onClick={() => {\n                                    localStorage.clear();\n                                }}>Log out</a>\n                            </nav>\n                            <div>\n                                <div className=\"container\">\n                                    <div className=\"moreinfo d-flex justify-content-end align-items-center mt-2 mb-5\">\n                                        <Link to={'./Addmoney'} className=\"btn btnshtomonedha\">Shto monedha</Link>\n                                        <span\n                                            className=\"totali font-weight-bold ml-2 h2\">\n                                        {value.outlays.reduce((a, v) => a = a + v.price, 0)}/{value.money.activeMoney}\n                                    </span>\n                                    </div>\n\n                                    <div className='mb-4 d-flex justify-content-center'>\n                                        <Link to={'./Outlay'} className='btn btnshtoshpenzim '>\n                                            Shto shpenzime\n                                        </Link>\n                                    </div>\n\n                                </div>\n                                {value.outlays.map(item =>\n                                    <div className=\"d-flex justify-content-center\" key={item.id}>\n                                        <div className=\"w-75 mb-2 card tasks\">\n                                            <div\n                                                className=\"card-body d-flex justify-content-between align-items-center\">\n                                                <span>{item.name}</span>\n                                                <span>{item.price} E</span>\n                                                <div className=\"actions\">\n                                                    <button className=\"btn mr-1\">\n                                                        <i className=\"far fa-edit\"></i>\n                                                    </button>\n\n                                                    <button onClick={this.deleteOutlay = () => {\n                                                        firebase.firestore().collection(`outlays`).doc(item.id).delete();\n                                                    }}\n                                                            className=\"btn\"><i className=\"fas fa-trash-alt\"></i>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n\n\n}\n\nexport default Dashboard;","C:\\Users\\Natyra\\Desktop\\register\\src\\firebase.js",["62"],"import firebase from 'firebase/app';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDbvkwNar5pCmBsUNVTYIe9f4FeAetaoAs\",\r\n    authDomain: \"money-outlay.firebaseapp.com\",\r\n    projectId: \"money-outlay\",\r\n    storageBucket: \"money-outlay.appspot.com\",\r\n    messagingSenderId: \"854369756550\",\r\n    appId: \"1:854369756550:web:af9af2d025055b867af807\",\r\n    measurementId: \"G-ESEFB21B83\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\Context.js",[],"C:\\Users\\Natyra\\Desktop\\register\\src\\components\\money\\Addmoney.js",["63"],"import React, {Component} from 'react';\r\nimport firebase from \"../../firebase\";\r\nimport {Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Consumer} from '../Context'\r\nimport './Addmoney.css';\r\n\r\nclass Addmoney extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    return <Formik\r\n                        initialValues={{activeMoney: ''}}\r\n\r\n                        onSubmit={formValues => {\r\n                            const vleraAktiveMonedhave = value.money.activeMoney;\r\n                            let shumaReEMonedhave = formValues.activeMoney;\r\n                            const shumaTotale = parseInt(vleraAktiveMonedhave) + parseInt(shumaReEMonedhave);\r\n                            const updateRef = firebase.firestore().collection('money').doc('o6gaS9eLygWxAZAJG05ZO');\r\n                            updateRef.set({\r\n                                activeMoney: shumaTotale\r\n                            });\r\n                            this.props.history.push('/Dashboard');\r\n                        }}\r\n\r\n                        validationSchema={Yup.object().shape({\r\n\r\n                            activeMoney: Yup.string()\r\n                                .required('Required')\r\n                        })}>\r\n                        {props => {\r\n                            const {\r\n                                values,\r\n                                touched,\r\n                                errors,\r\n                                isSubmitting,\r\n                                handleChange,\r\n                                handleBlur,\r\n                                handleSubmit\r\n                            } = props;\r\n                            return (\r\n                                <div id=\"money-document\">\r\n                                    <div className=\"moneyform border p-0 col-lg-4 col-md-7 col-sm-10 col-xs-10 ml-auto mr-auto\">\r\n                                        <div className=\"card-header h3 addmoney-element\">Add money</div>\r\n                                        <div className=\"card-body\">\r\n                                            <form onSubmit={handleSubmit}>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"activeMoney\"\r\n                                                        placeholder=\"Enter Money...\"\r\n                                                        value={values.activeMoney}\r\n                                                        onBlur={handleBlur}\r\n                                                        className=' form-control {errors.activeMoney && touched.activeMoney && \"erros\"}'\r\n                                                        onChange={handleChange}/>\r\n                                                </div>\r\n                                                {errors.activeMoney && touched.activeMoney && (\r\n                                                    <div className=\"input-feedback\">{errors.activeMoney}</div>\r\n                                                )}\r\n\r\n                                                <input\r\n                                                    type=\"submit\"\r\n                                                    value=\"Add money\"\r\n                                                    className=\"btn moneybtn btn-block\"\r\n                                                    disabled={isSubmitting}\r\n                                                />\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        }\r\n                    </Formik>\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Addmoney;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\outlay\\Outlay.js",["64","65"],"import React, {Component} from 'react';\r\nimport firebase from \"../../firebase\";\r\nimport {Form, Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as EmailValidator from 'email-validator';\r\nimport './Outlay.css';\r\n\r\n\r\n\r\nclass Outlay extends Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{name: '', price: ''}}\r\n                onSubmit={values => {\r\n\r\n                    firebase.firestore().collection(\"outlays\").add({\r\n                        name: values.name,\r\n                        price: parseInt(values.price),\r\n\r\n\r\n                    })\r\n                    this.props.history.push('/Dashboard');\r\n                }}\r\n\r\n\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string()\r\n                        .required('Required')\r\n                        .min(3, 'Too Short!'),\r\n                    price: Yup.string()\r\n                        .required('Required')\r\n\r\n\r\n                })}\r\n            >\r\n                {\r\n                    props => {\r\n                        const {\r\n                            values,\r\n                            touched,\r\n                            errors,\r\n                            isSubmitting,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit\r\n                        } = props;\r\n                        return (\r\n                            <div id=\"outlay-document\">\r\n                                <div className=\"outlayform border p-0 col-lg-4 col-md-7 col-sm-10 col-xs-12 ml-auto mr-auto\">\r\n                                    <div className=\"card-header h3 add-element\">Add shpenzimet</div>\r\n                                    <div className=\"card-body\">\r\n                                        <form onSubmit={handleSubmit}>\r\n\r\n                                            <div className=\"form-group form-group-lg\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Enter Name...\"\r\n                                                    value={values.name}\r\n                                                    onBlur={handleBlur}\r\n                                                    className=' form-control {errors.name && touched.name && \"erros\"}'\r\n                                                    onChange={handleChange}/>\r\n                                            </div>\r\n                                            {errors.name && touched.name && (\r\n                                                <div className=\"input-feedback\">{errors.name}</div>\r\n                                            )}\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"price\"\r\n                                                    placeholder=\"Enter Price...\"\r\n                                                    value={values.price}\r\n                                                    onBlur={handleBlur}\r\n                                                    className='form-control {errors.price && touched.price && \"erros\"}'\r\n                                                    onChange={handleChange}/>\r\n\r\n                                            </div>\r\n                                            {errors.price && touched.price && (\r\n                                                <div className=\"input-feedback\">{errors.price}</div>\r\n                                            )}\r\n\r\n                                            <input\r\n                                                type=\"submit\"\r\n                                                value=\"Add shpenzimet\"\r\n                                                className=\"btn addbtn btn-block\"\r\n                                                disabled={isSubmitting}\r\n                                            />\r\n                                        </form>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Outlay;","C:\\Users\\Natyra\\Desktop\\register\\src\\components\\privateRoute.js",["66","67"],"import React, {useContext} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {Consumer} from './Context';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    let jeILoguar;\r\n    if (localStorage.getItem(\"loggedIn\") === null) {\r\n        jeILoguar = false;\r\n    } else {\r\n        jeILoguar = true;\r\n    }\r\n    return (\r\n            <Route {...rest} render={props => (\r\n                jeILoguar ?\r\n                    <Component {...props} />\r\n                    : <Redirect to=\"/\"/>\r\n            )}/>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\Natyra\\Desktop\\register\\src\\services\\auth.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":13,"nodeType":"74","messageId":"75","endLine":3,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":19,"column":33,"nodeType":"78","endLine":19,"endColumn":81},{"ruleId":"76","severity":1,"message":"77","line":20,"column":33,"nodeType":"78","endLine":22,"endColumn":36},{"ruleId":"72","severity":1,"message":"79","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":17},{"ruleId":"72","severity":1,"message":"80","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"80","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":5,"column":13,"nodeType":"74","messageId":"75","endLine":5,"endColumn":27},{"ruleId":"72","severity":1,"message":"81","line":1,"column":16,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"82","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'EmailValidator' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firestore' is defined but never used.","'Form' is defined but never used.","'useContext' is defined but never used.","'Consumer' is defined but never used.","no-global-assign","no-unsafe-negation"]